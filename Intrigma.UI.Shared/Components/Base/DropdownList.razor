@typeparam T

<div class="dropdown" @ref="DropdownRef">
    @if (!string.IsNullOrEmpty(Label))
    {
        <label>@Label</label>
    }
    <div class="activator @_cssClassesActivator @(isOpen ? "activator-active" : "")" @onclick="ToggleDropdown">
        <div class="chevron-container">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                 class="chevron-icon @(isOpen ? "rotated" : "")"
                 viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
            </svg>
        </div>
        @if (Value is null)
        {
            <span class="activator-text">@ActivatorPlaceholderText</span>
        }
        else
        {
            if (SelectedValueFragment is null)
            {
                <span class="activator-text">@Value</span>
            }
            else
            {
                @SelectedValueFragment(Value)
            }
        }
    </div>

    <div class="dropdown-body @_cssClassesBody @(isOpen ? (_isClosing ? "closing" : "opening") : "hidden")">
        @if (ShowSearch)
        {
            <TextInput @bind-Value="_searchStr"
                       RoundedCorners="RoundedCorners"
                       Placeholder="Search"
                       For="() => _searchStr"
                       OnInputChanged="@OnSearchInputChanged"/>
            <hr>
        }
        <ul>
            @foreach (var item in _filteredItems)
            {
                if (ItemFragment is not null)
                {
                    <li class="dropdown-item" @onclick="(() => SelectItem(item))">
                        @ItemFragment(item)
                    </li>
                }
                else
                {
                    <li class="dropdown-item" @onclick="(() => SelectItem(item))">@item</li>
                }
            }
        </ul>
    </div>
</div>
